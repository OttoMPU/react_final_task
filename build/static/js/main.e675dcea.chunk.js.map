{"version":3,"sources":["components/Addcustomer.js","components/Editcustomer.js","components/Customerlist.js","components/Addtraining.js","components/Trainingslist.js","App.js","serviceWorker.js","index.js"],"names":["Addcustomer","props","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","addCustomer","inputChanged","event","target","name","value","Button","style","marginLeft","marginTop","marginBottom","variant","color","onClick","Dialog","disableBackdropClick","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","onChange","label","fullWidth","DialogActions","Editcustomer","updateCustomer","links","href","size","console","log","Customerlist","customers","setCustomers","msg","setMsg","useEffect","getCustomers","fetch","then","response","json","data","content","catch","err","error","link","method","headers","body","JSON","stringify","_","customercolumns","Header","accessor","Cell","row","original","window","confirm","defaultPageSize","filterable","columns","textAlign","Snackbar","autoHideDuration","message","anchorOrigin","vertical","horizontal","Addtraining","date","duration","activity","training","setTraining","addTraining","Trainingslist","trainings","setTrainings","getTrainings","trainingcolumns","moment","format","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","App","useTheme","classes","React","setValue","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e675dcea.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Addcustomer(props) {\r\n \r\n    const [open, setOpen] = useState(false);\r\n    const [customer, setCustomer] = useState({firstname: '', lastname: '', streetaddress: '', postcode: '', city: '', email:'', phone:''});\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        props.addCustomer(customer);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setCustomer({...customer, [event.target.name]: event.target.value});\r\n    }\r\n\r\n\r\n\r\n    return(\r\n<div>\r\n    <Button style={{marginLeft:\"50%\", marginTop:\"3%\", marginBottom:\"1%\"}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add a customer\r\n    </Button>\r\n      <Dialog open={open} disableBackdropClick={true}  onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New customer</DialogTitle>\r\n        <DialogContent>\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"firstname\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={inputChanged}\r\n            label=\"First name\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"lastname\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={inputChanged}\r\n            label=\"Lastname\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"streetaddress\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={inputChanged}\r\n            label=\"Street Address\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"postcode\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={inputChanged}\r\n            label=\"Post Code\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={inputChanged}\r\n            label=\"City\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={inputChanged}\r\n            label=\"Email\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={inputChanged}\r\n            label=\"Phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n</div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Editcustomer(props) {\r\n \r\n    const [open,setOpen] = useState(false);\r\n    const [customer, setCustomer] = useState({firstname: '', lastname: '', streetaddress: '', postcode: '', city: '', email:'', phone:''});\r\n\r\n    const handleClickOpen = () => {\r\n      console.log(props.customer);\r\n      setCustomer({\r\n        firstname: props.customer.firstname, lastname: props.customer.lastname,\r\n        streetaddress: props.customer.streetaddress, postcode: props.customer.postcode,\r\n        city: props.customer.city, email: props.customer.email, phone: props.customer.phone\r\n        });\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        props.updateCustomer(props.customer.links[0].href, customer);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setCustomer({...customer, [event.target.name]: event.target.value});\r\n    }\r\n\r\n\r\n\r\n    return(\r\n<div>\r\n    <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n    </Button>\r\n      <Dialog open={open} disableBackdropClick={true} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit customer</DialogTitle>\r\n        <DialogContent>\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"firstname\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={inputChanged}\r\n            label=\"First name\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"lastname\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={inputChanged}\r\n            label=\"Lastname\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"streetaddress\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={inputChanged}\r\n            label=\"Street Address\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"postcode\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={inputChanged}\r\n            label=\"Post Code\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={inputChanged}\r\n            label=\"City\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={inputChanged}\r\n            label=\"Email\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={inputChanged}\r\n            label=\"Phone\"\r\n            fullWidth\r\n          />     \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n</div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'; //ei tarvitse kirjoittaa myöhemmin react.\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Addcustomer from './Addcustomer';\r\nimport Editcustomer from './Editcustomer';\r\n\r\nexport default function Customerlist(){\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        getCustomers();\r\n    }, [])\r\n\r\n    const columnstyle = {\r\n        marginLeft: \"11%\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    const getCustomers = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n        .then(response => response.json())\r\n        .then(data => setCustomers(data.content))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const deleteCustomer = (link) => {\r\n        if (window.confirm('Are you sure?')) {\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(_ => getCustomers())              \r\n        .then(_ => {\r\n            setMsg('Customer deleted');\r\n            setOpen(true)\r\n        })\r\n        .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const addCustomer = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers',\r\n            {\r\n                method: 'POST', \r\n                headers: {\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify(customer)\r\n            }\r\n        )\r\n        .then(_ => getCustomers())\r\n        .then(_ => {\r\n            setMsg('New customer added');\r\n            setOpen(true);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const updateCustomer = (link, customer) => {\r\n        fetch(link,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })\r\n        .then(_ => getCustomers())\r\n        .then(_ => {\r\n            setMsg('Customer updated');\r\n            setOpen(true);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    const customercolumns = [\r\n        {\r\n         Header: 'First Name',\r\n         accessor: 'firstname'   \r\n        },\r\n        {\r\n         Header: 'Last Name',\r\n         accessor: 'lastname'\r\n        },\r\n        {\r\n            Header: 'Address',\r\n            accessor: 'streetaddress'\r\n        },\r\n        {\r\n            Header: 'Post code',\r\n            accessor: 'postcode'\r\n        },\r\n        {\r\n            Header: 'City',\r\n            accessor: 'city'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Phone number',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Cell: row => (<Editcustomer customer={row.original} updateCustomer={updateCustomer} />)\r\n        },\r\n        {\r\n            Cell: row => (<Button onClick={() => deleteCustomer(row.original.links[0].href)} > Delete </Button> )\r\n        }\r\n    ]\r\n\r\n\r\n   return(\r\n    <div>\r\n        <Addcustomer addCustomer={addCustomer} />\r\n        <ReactTable defaultPageSize={10} filterable={true} data={customers} columns={customercolumns} style={columnstyle} />\r\n        <Snackbar\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n            message={msg}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left'\r\n            }}\r\n        /> \r\n    </div>\r\n   );\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nexport default function Addtraining(props) {\r\n \r\n    const [open, setOpen] = useState(false);\r\n    const [training, setTraining] = useState({date: '', duration: '', activity: '', customer: '' });\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        props.addTraining(training);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setTraining({...training, [event.target.name]: event.target.value});\r\n    }\r\n\r\n\r\n\r\n    return(\r\n<div>\r\n    <Button style={{marginLeft:\"50%\", marginTop:\"3%\", marginBottom:\"1%\"}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add a training\r\n    </Button>\r\n      <Dialog open={open} disableBackdropClick={true}  onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New training</DialogTitle>\r\n        <DialogContent>\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value= {training.date}\r\n            onChange={inputChanged}\r\n            label=\"Date\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"duration\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={inputChanged}\r\n            label=\"Duration\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"activity\"\r\n            name=\"activity\"\r\n            value={training.activity}\r\n            onChange={inputChanged}\r\n            label=\"Activity\"\r\n            fullWidth\r\n          />\r\n        <TextField\r\n            margin=\"dense\"\r\n            id=\"customer\"\r\n            name=\"customer\"\r\n            value={training.customer}\r\n            onChange={inputChanged}\r\n            label=\"Customer\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n</div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'; \r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport moment from 'moment';\r\nimport Addtraining from './Addtraining';\r\n\r\n\r\nexport default function Trainingslist(){\r\n\r\n    const [trainings, setTrainings] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n\r\n  \r\n    useEffect(() => {\r\n        getTrainings();\r\n    }, [])\r\n\r\n    const columnstyle = {\r\n        marginLeft: \"11%\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then(response => response.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const deleteTraining = (link) => {\r\n        if (window.confirm('Are you sure?')) {\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(_ => getTrainings())              \r\n        .then(_ => {\r\n            setMsg('Training deleted');\r\n            setOpen(true)\r\n        })\r\n        .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const addTraining = (training) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings',\r\n            {\r\n                method: 'POST', \r\n                headers: {\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify(training)\r\n            }\r\n        )\r\n        .then(_ => getTrainings())\r\n        .then(_ => {\r\n            setMsg('New training added');\r\n            setOpen(true);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n\r\n    const trainingcolumns = [\r\n        {\r\n         Header: 'Date',\r\n         accessor: 'date',\r\n         Cell: row => (moment(row.value).format('DD-MM-YYYY hh:mm:ss a'))\r\n        },\r\n        {\r\n         Header: 'Duration (minutes)',\r\n         accessor: 'duration'\r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity'\r\n        },\r\n        {\r\n            Header: 'Customer',\r\n            accessor: 'customer.lastname'\r\n        },\r\n        {\r\n            Cell: row => (<Button onClick={() => deleteTraining('https://customerrest.herokuapp.com/api/trainings/' + row.original.id )} > Delete </Button> )\r\n        }\r\n    ]\r\n\r\n   return(\r\n<div>\r\n\r\n        <Addtraining addTraining={addTraining} />\r\n        <ReactTable defaultPageSize={10} filterable={true} data={trainings} columns={trainingcolumns} style={columnstyle} />\r\n        <Snackbar\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={handleClose}\r\n            message={msg}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left'\r\n            }}\r\n        />\r\n</div>\r\n   );\r\n}","import React from 'react';\nimport './App.css';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport EventIcon from '@material-ui/icons/Event';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport Customerlist from './components/Customerlist';\nimport Trainingslist from './components/Trainingslist'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport clsx from 'clsx';\n\n\n\nfunction App() {\n\n  const theme = useTheme();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const [value, setValue] = React.useState(0);\n\n  \n\n  const handleDrawerOpen = () => {\n\n    setOpen(true);\n\n  };\n\n \n\n  const handleDrawerClose = () => {\n\n    setOpen(false);\n\n  };\n\n \n\n  return (\n\n    <div className={classes.root}>\n\n      <CssBaseline />\n\n      <AppBar position=\"fixed\"\n\n              className={clsx(classes.appBar, {\n\n                [classes.appBarShift]: open,\n\n              })} >\n\n        <Toolbar>\n\n          <IconButton\n\n            color=\"inherit\"\n\n            aria-label=\"open drawer\"\n\n            onClick={handleDrawerOpen}\n\n            edge=\"start\" >\n\n            <MenuIcon />\n\n          </IconButton>\n\n          <Typography variant=\"h6\" noWrap>\n\n            PersonalTrainer\n\n          </Typography>\n\n        </Toolbar>\n\n      </AppBar>\n\n      <Drawer\n\n        variant=\"persistent\"\n\n        anchor=\"left\"\n\n        open={open}\n\n      >\n\n        <div>\n\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={() => setValue(0)} >\n            <ListItemIcon><AccountBoxIcon /></ListItemIcon>\n            <ListItemText primary='Customers' />\n          </ListItem>\n\n          <ListItem button onClick={() => setValue(1)}>\n\n            <ListItemIcon><DirectionsRunIcon /></ListItemIcon>\n\n            <ListItemText primary='Trainings' />\n\n          </ListItem>\n\n        </List>\n\n      </Drawer>\n\n      <div \n\n          className={clsx(classes.content, {\n\n          [classes.contentShift]: open,\n\n        })}>\n\n      {\n\n        value === 0 ? (\n          <Customerlist/>\n        ) : \n        (\n          <Trainingslist/>\n        )\n\n      }\n      </div>\n    </div>\n  );\n\n}\n\n \n\nconst drawerWidth = 240;\n\n \n\nconst useStyles = makeStyles(theme => ({\n\n  root: {\n\n    display: 'flex',\n\n  },\n\n  appBar: {\n\n    transition: theme.transitions.create(['margin', 'width'], {\n\n      easing: theme.transitions.easing.sharp,\n\n      duration: theme.transitions.duration.leavingScreen,\n\n    }),\n\n  },\n\n  appBarShift: {\n\n    width: `calc(100% - ${drawerWidth}px)`,\n\n    marginLeft: drawerWidth,\n\n    transition: theme.transitions.create(['margin', 'width'], {\n\n      easing: theme.transitions.easing.easeOut,\n\n      duration: theme.transitions.duration.enteringScreen,\n\n    }),\n\n  },\n\n  menuButton: {\n\n    marginRight: theme.spacing(2),\n\n  },\n\n  hide: {\n\n    display: 'none',\n\n  },\n\n  drawer: {\n\n    width: drawerWidth,\n\n    flexShrink: 0,\n\n  },\n\n  drawerPaper: {\n\n    width: drawerWidth,\n\n  },\n\n  drawerHeader: {\n\n    display: 'flex',\n\n    alignItems: 'center',\n\n    padding: theme.spacing(0, 1),\n\n    ...theme.mixins.toolbar,\n\n    justifyContent: 'flex-end',\n\n  },\n\n  content: {\n\n    flexGrow: 1,\n\n    padding: theme.spacing(3),\n\n    transition: theme.transitions.create('margin', {\n\n      easing: theme.transitions.easing.sharp,\n\n      duration: theme.transitions.duration.leavingScreen,\n\n    }),\n\n    marginLeft: -drawerWidth,\n\n  },\n\n  contentShift: {\n\n    transition: theme.transitions.create('margin', {\n\n      easing: theme.transitions.easing.easeOut,\n\n      duration: theme.transitions.duration.enteringScreen,\n\n    }),\n\n    marginLeft: 0,\n\n  },\n\n}));\n\n \n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}